apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

def STRING = "String"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mrebollob.leitnerbox"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode computeVersionCode()
        versionName "0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix '.develop'
            buildConfigField STRING, "GIT_SHA", "\"DEBUG\""
            buildConfigField STRING, "BUILD_TIME", "\"DEBUG\""
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
            def buildTime = new GregorianCalendar().format("MM-dd-yyyy' 'h:mm:ss a z")
            buildConfigField STRING, "GIT_SHA", "\"${gitSha}\""
            buildConfigField STRING, "BUILD_TIME", "\"${buildTime}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_library"
    implementation "com.android.support:design:$support_library"
    implementation "com.android.support:cardview-v7:$support_library"
    implementation "com.android.support:customtabs:$support_library"
    implementation "com.android.support:support-v4:$support_library"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // Views
    implementation 'io.github.inflationx:calligraphy3:3.0.0'
    implementation 'io.github.inflationx:viewpump:1.0.0'
    implementation 'com.github.apl-devs:appintro:v4.2.3'

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.7@aar') {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

/**
 * Gets the commit number from the current Git commit. E.g. 538
 */
def computeVersionCode() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}